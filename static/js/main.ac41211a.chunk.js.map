{"version":3,"sources":["components/Experience.js","components/Contact.js","components/Education.js","components/Form.js","components/Header.js","App.js","index.js"],"names":["Experience","props","data","companyNameText","jobPositionText","jobTitleText","workStartingDateText","workEndingDateText","experienceShow","experienceId","handleExperienceInput","handleExperienceSubmit","deleteExperience","id","className","htmlFor","display","type","name","value","data-id","onChange","onClick","Contact","firstNameText","lastNameText","emailText","phoneText","formSubmit","handleInput","Education","schoolNameText","studyTitleText","schoolStartingDateText","schoolEndingDateText","educationShow","educationId","handleEducationSubmit","handleEducationInput","deleteEducation","Form","handleFormSubmit","addEducation","addExperience","educations","experiences","educationList","map","elem","index","experienceList","Header","App","state","uniqid","bind","event","preventDefault","target","this","setState","dataset","newExperinces","newExperiences","filter","newEducations","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVA2HeA,MAxHf,SAAoBC,GAClB,MAQIA,EAAMC,KAPRC,EADF,EACEA,gBACAC,EAFF,EAEEA,gBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,qBACAC,EALF,EAKEA,mBACAC,EANF,EAMEA,eACAC,EAPF,EAOEA,aAEIC,EAAwBT,EAAMS,sBAC9BC,EAAyBV,EAAMU,uBAC/BC,EAAmBX,EAAMW,iBAC/B,OACE,2BAAUC,GAAG,uBAAb,UACE,4DACA,sBAAKC,UAAU,sBAAf,UACE,uBAAOC,QAAQ,kBAAf,uBACCP,EACC,oBAAIQ,QAAQ,OAAOF,UAAU,kBAA7B,SACGX,IAGH,uBACEc,KAAK,OACLC,KAAK,kBACLC,MAAOhB,EACPiB,UAASX,EACTY,SAAUX,EACVI,UAAU,wBAIhB,sBAAKA,UAAU,sBAAf,UACE,uBAAOC,QAAQ,kBAAf,wBACCP,EACC,oBAAIQ,QAAQ,OAAOF,UAAU,kBAA7B,SACGV,IAGH,uBACEa,KAAK,OACLC,KAAK,kBACLC,MAAOf,EACPgB,UAASX,EACTY,SAAUX,EACVI,UAAU,wBAIhB,sBAAKA,UAAU,sBAAf,UACE,uBAAOC,QAAQ,eAAf,qBACCP,EACC,oBAAIQ,QAAQ,OAAOF,UAAU,eAA7B,SACGT,IAGH,uBACEY,KAAK,OACLC,KAAK,eACLC,MAAOd,EACPe,UAASX,EACTY,SAAUX,EACVI,UAAU,qBAIhB,sBAAKA,UAAU,sBAAf,UACE,uBAAOC,QAAQ,uBAAf,6BACCP,EACC,oBAAIQ,QAAQ,OAAOF,UAAU,uBAA7B,SACGR,IAGH,uBACEW,KAAK,OACLC,KAAK,uBACLC,MAAOb,EACPc,UAASX,EACTY,SAAUX,EACVI,UAAU,6BAIhB,sBAAKA,UAAU,sBAAf,UACE,uBAAOC,QAAQ,qBAAf,2BACCP,EACC,oBAAIQ,QAAQ,OAAOF,UAAU,qBAA7B,SACGP,IAGH,uBACEU,KAAK,OACLC,KAAK,qBACLC,MAAOZ,EACPa,UAASX,EACTY,SAAUX,EACVI,UAAU,2BAIhB,wBACEI,KAAK,iBACLE,UAASX,EACTa,QAASX,EACTG,UAAU,cAJZ,SAMGN,EAAiB,OAAS,WAE7B,wBACEY,UAASX,EACTa,QAASV,EACTE,UAAU,cAHZ,wB,MCrCSS,MAxEf,SAAiBtB,GACf,MAMIA,EAAMC,KALRsB,EADF,EACEA,cACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,WAEIC,EAAc5B,EAAM4B,YAC1B,OACE,2BAAUhB,GAAG,oBAAb,UACE,yDACA,sBAAKC,UAAU,mBAAf,UACE,uBAAOC,QAAQ,gBAAf,0BACCa,EACC,oBAAId,UAAU,gBAAd,SAA+BU,IAE/B,uBACEP,KAAK,OACLC,KAAK,gBACLJ,UAAU,iBACVK,MAAOK,EACPH,SAAUQ,OAIhB,sBAAKf,UAAU,mBAAf,UACE,uBAAOC,QAAQ,eAAf,yBACCa,EACC,oBAAId,UAAU,eAAd,SAA8BW,IAE9B,uBACER,KAAK,OACLC,KAAK,eACLC,MAAOM,EACPX,UAAU,gBACVO,SAAUQ,OAIhB,sBAAKf,UAAU,mBAAf,UACE,uBAAOC,QAAQ,YAAf,qBACCa,EACC,oBAAId,UAAU,YAAd,SAA2BY,IAE3B,uBACET,KAAK,QACLC,KAAK,YACLC,MAAOO,EACPZ,UAAU,aACVO,SAAUQ,OAIhB,sBAAKf,UAAU,mBAAf,UACE,uBAAOC,QAAQ,YAAf,4BACCa,EACC,oBAAId,UAAU,kBAAd,SAAiCa,IAEjC,uBACEV,KAAK,MACLC,KAAK,YACLC,MAAOQ,EACPb,UAAU,mBACVO,SAAUQ,W,MC8BPC,MA9Ff,SAAmB7B,GACjB,MAOIA,EAAMC,KANR6B,EADF,EACEA,eACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,uBACAC,EAJF,EAIEA,qBACAC,EALF,EAKEA,cACAC,EANF,EAMEA,YAEIC,EAAwBpC,EAAMoC,sBAC9BC,EAAuBrC,EAAMqC,qBAC7BC,EAAkBtC,EAAMsC,gBAC9B,OACE,2BAAU1B,GAAG,sBAAb,UACE,+CACA,sBAAKC,UAAU,qBAAf,UACE,uBAAOC,QAAQ,iBAAf,2BACCoB,EACC,oBAAIrB,UAAU,iBAAd,SAAgCiB,IAEhC,uBACEd,KAAK,OACLC,KAAK,iBACLC,MAAOY,EACPV,SAAUiB,EACVlB,UAASgB,EACTtB,UAAU,uBAIhB,sBAAKA,UAAU,qBAAf,UACE,uBAAOC,QAAQ,iBAAf,qBACCoB,EACC,oBAAIrB,UAAU,iBAAd,SAAgCkB,IAEhC,uBACEf,KAAK,OACLC,KAAK,iBACLC,MAAOa,EACPX,SAAUiB,EACVlB,UAASgB,EACTtB,UAAU,uBAIhB,sBAAKA,UAAU,qBAAf,UACE,uBAAOC,QAAQ,yBAAf,6BACCoB,EACC,oBAAIrB,UAAU,yBAAd,SAAwCmB,IAExC,uBACEhB,KAAK,OACLC,KAAK,yBACLC,MAAOc,EACPZ,SAAUiB,EACVlB,UAASgB,EACTtB,UAAU,+BAIhB,sBAAKA,UAAU,qBAAf,UACE,uBAAOC,QAAQ,uBAAf,2BACCoB,EACC,oBAAIrB,UAAU,uBAAd,SAAsCoB,IAEtC,uBACEjB,KAAK,OACLC,KAAK,uBACLC,MAAOe,EACPb,SAAUiB,EACVlB,UAASgB,EACTtB,UAAU,6BAIhB,wBACEI,KAAK,gBACLE,UAASgB,EACTd,QAASe,EACTvB,UAAU,cAJZ,SAMGqB,EAAgB,OAAS,WAE5B,wBACEf,UAASgB,EACTd,QAASiB,EACTzB,UAAU,cAHZ,wB,MC9BS0B,MAlDf,SAAcvC,GACZ,IAAM4B,EAAc5B,EAAM4B,YACpBY,EAAmBxC,EAAMwC,iBACzBJ,EAAwBpC,EAAMoC,sBAC9BC,EAAuBrC,EAAMqC,qBAC7BC,EAAkBtC,EAAMsC,gBACxBG,EAAezC,EAAMyC,aACrBhC,EAAwBT,EAAMS,sBAC9BC,EAAyBV,EAAMU,uBAC/BgC,EAAgB1C,EAAM0C,cACtB/B,EAAmBX,EAAMW,iBACzBgB,EAAa3B,EAAMC,KAAK0B,WACxBgB,EAAa3C,EAAMC,KAAK0C,WACxBC,EAAc5C,EAAMC,KAAK2C,YACzBC,EAAgBF,EAAWG,KAAI,SAACC,EAAMC,GAC1C,OACE,cAAC,EAAD,CAEE/C,KAAM8C,EACNV,qBAAsBA,EACtBD,sBAAuBA,EACvBE,gBAAiBA,GAJZU,MAQLC,EAAiBL,EAAYE,KAAI,SAACC,EAAMC,GAC5C,OACE,cAAC,EAAD,CAEE/C,KAAM8C,EACNtC,sBAAuBA,EACvBC,uBAAwBA,EACxBC,iBAAkBA,GAJbqC,MAQX,OACE,uBAAMpC,GAAG,WAAT,UACE,cAAC,EAAD,CAASX,KAAMD,EAAMC,KAAM2B,YAAaA,IACvCiB,EACD,wBAAQxB,QAASoB,EAAjB,2BACCQ,EACD,wBAAQ5B,QAASqB,EAAjB,2BACA,uBACA,wBAAQrB,QAASmB,EAAjB,SACGb,EAAa,OAAS,e,MC5ChBuB,MAJf,SAAgBlD,GACd,OAAO,wBAAQY,GAAG,SAAX,qB,wBC4MMuC,E,kDAzMb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXxC,GAAIyC,MACJ9B,cAAe,GACfC,aAAc,GACdC,UAAW,GACXC,UAAW,GACXC,YAAY,EACZgB,WAAY,CACV,CACEb,eAAgB,GAChBC,eAAgB,GAChBC,uBAAwB,GACxBC,qBAAsB,GACtBE,YAAakB,MACbnB,eAAe,IAGnBU,YAAa,CACX,CACE1C,gBAAiB,GACjBC,gBAAiB,GACjBC,aAAc,GACdC,qBAAsB,GACtBC,mBAAoB,GACpBE,aAAc6C,MACd9C,gBAAgB,KAItB,EAAKqB,YAAc,EAAKA,YAAY0B,KAAjB,gBACnB,EAAKd,iBAAmB,EAAKA,iBAAiBc,KAAtB,gBACxB,EAAKlB,sBAAwB,EAAKA,sBAAsBkB,KAA3B,gBAC7B,EAAKjB,qBAAuB,EAAKA,qBAAqBiB,KAA1B,gBAC5B,EAAKb,aAAe,EAAKA,aAAaa,KAAlB,gBACpB,EAAKhB,gBAAkB,EAAKA,gBAAgBgB,KAArB,gBACvB,EAAK7C,sBAAwB,EAAKA,sBAAsB6C,KAA3B,gBAC7B,EAAK5C,uBAAyB,EAAKA,uBAAuB4C,KAA5B,gBAC9B,EAAKZ,cAAgB,EAAKA,cAAcY,KAAnB,gBACrB,EAAK3C,iBAAmB,EAAKA,iBAAiB2C,KAAtB,gBAxCZ,E,+CA0Cd,SAAYC,GACVA,EAAMC,iBACN,MAAwBD,EAAME,OAAtBxC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdwC,KAAKC,SAAL,eACG1C,EAAOC,M,mCAIZ,SAAsBqC,GACpBA,EAAMC,iBACN,MAAiCD,EAAME,OAA/BxC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAO0C,EAArB,EAAqBA,QACfC,EAAgBH,KAAKN,MAAMR,YAAYE,KAAI,SAACC,GAIhD,OAHIA,EAAKvC,eAAiBoD,EAAQhD,KAChCmC,EAAK9B,GAAQC,GAER6B,KAETW,KAAKC,SAAS,CACZf,YAAaiB,M,oCAGjB,SAAuBN,GAAQ,IAAD,OAC5BA,EAAMC,iBACN,MAA0BD,EAAME,OAAxBxC,EAAR,EAAQA,KAAM2C,EAAd,EAAcA,QACRE,EAAiBJ,KAAKN,MAAMR,YAAYE,KAAI,SAACC,EAAMC,GAIvD,OAHID,EAAKvC,eAAiBoD,EAAQhD,KAChCmC,EAAK9B,IAAS,EAAKmC,MAAMR,YAAYI,GAAOzC,gBAEvCwC,KAETW,KAAKC,SAAS,CACZf,YAAakB,M,2BAGjB,SAAcP,GACZA,EAAMC,iBACNE,KAAKC,SAAS,CACZf,YAAY,GAAD,mBACNc,KAAKN,MAAMR,aADL,CAET,CACE1C,gBAAiB,GACjBC,gBAAiB,GACjBC,aAAc,GACdC,qBAAsB,GACtBC,mBAAoB,GACpBE,aAAc6C,MACd9C,gBAAgB,S,8BAKxB,SAAiBgD,GACfA,EAAMC,iBACN,IAAQI,EAAYL,EAAME,OAAlBG,QACFC,EAAgBH,KAAKN,MAAMR,YAAYmB,QAAO,SAAChB,GACnD,OAAOA,EAAKvC,eAAiBoD,EAAQhD,MAEvC8C,KAAKC,SAAS,CACZf,YAAaiB,M,0BAGjB,SAAaN,GACXA,EAAMC,iBACNE,KAAKC,SAAS,CACZhB,WAAW,GAAD,mBACLe,KAAKN,MAAMT,YADN,CAER,CACEb,eAAgB,GAChBC,eAAgB,GAChBC,uBAAwB,GACxBC,qBAAsB,GACtBE,YAAakB,MACbnB,eAAe,S,kCAKvB,SAAqBqB,GACnBA,EAAMC,iBACN,MAAiCD,EAAME,OAA/BxC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAO0C,EAArB,EAAqBA,QACfI,EAAgBN,KAAKN,MAAMT,WAAWG,KAAI,SAACC,GAI/C,OAHIA,EAAKZ,cAAgByB,EAAQhD,KAC/BmC,EAAK9B,GAAQC,GAER6B,KAETW,KAAKC,SAAS,CACZhB,WAAYqB,M,mCAGhB,SAAsBT,GAAQ,IAAD,OAC3BA,EAAMC,iBACN,MAA0BD,EAAME,OAAxBxC,EAAR,EAAQA,KAAM2C,EAAd,EAAcA,QACRI,EAAgBN,KAAKN,MAAMT,WAAWG,KAAI,SAACC,EAAMC,GAIrD,OAHID,EAAKZ,cAAgByB,EAAQhD,KAC/BmC,EAAK9B,IAAS,EAAKmC,MAAMT,WAAWK,GAAOd,eAEtCa,KAETW,KAAKC,SAAS,CACZhB,WAAYqB,M,6BAGhB,SAAgBT,GACdA,EAAMC,iBACN,IAAQI,EAAYL,EAAME,OAAlBG,QACFI,EAAgBN,KAAKN,MAAMT,WAAWoB,QAAO,SAAChB,GAClD,OAAOA,EAAKZ,cAAgByB,EAAQhD,MAEtC8C,KAAKC,SAAS,CACZhB,WAAYqB,M,8BAGhB,SAAiBT,GAAQ,IAAD,OACtBA,EAAMC,iBACN,IAAMQ,EAAgBN,KAAKN,MAAMT,WAAWG,KAAI,SAACC,GAM/C,OAL8B,IAA1B,EAAKK,MAAMzB,WACboB,EAAKb,eAAgB,GACc,IAA1B,EAAKkB,MAAMzB,aACpBoB,EAAKb,eAAgB,GAEhBa,KAEHe,EAAiBJ,KAAKN,MAAMR,YAAYE,KAAI,SAACC,GAMjD,OAL8B,IAA1B,EAAKK,MAAMzB,WACboB,EAAKxC,gBAAiB,GACa,IAA1B,EAAK6C,MAAMzB,aACpBoB,EAAKxC,gBAAiB,GAEjBwC,KAETW,KAAKC,SAAS,CACZhC,YAAa+B,KAAKN,MAAMzB,WACxBgB,WAAYqB,EACZpB,YAAakB,M,oBAGjB,WACE,OACE,sBAAKjD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEZ,KAAMyD,KAAKN,MACXxB,YAAa8B,KAAK9B,YAClBY,iBAAkBkB,KAAKlB,iBACvBJ,sBAAuBsB,KAAKtB,sBAC5BC,qBAAsBqB,KAAKrB,qBAC3BI,aAAciB,KAAKjB,aACnBH,gBAAiBoB,KAAKpB,gBACtB7B,sBAAuBiD,KAAKjD,sBAC5BC,uBAAwBgD,KAAKhD,uBAC7BgC,cAAegB,KAAKhB,cACpB/B,iBAAkB+C,KAAK/C,0B,GAnMfsD,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ac41211a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Experience.css\";\n\nfunction Experience(props) {\n  const {\n    companyNameText,\n    jobPositionText,\n    jobTitleText,\n    workStartingDateText,\n    workEndingDateText,\n    experienceShow,\n    experienceId,\n  } = props.data;\n  const handleExperienceInput = props.handleExperienceInput;\n  const handleExperienceSubmit = props.handleExperienceSubmit;\n  const deleteExperience = props.deleteExperience;\n  return (\n    <fieldset id=\"experience-container\">\n      <legend>Professional Experince</legend>\n      <div className=\"experience-line-div\">\n        <label htmlFor=\"companyNameText\">Company: </label>\n        {experienceShow ? (\n          <h4 display=\"none\" className=\"companyNameLine\">\n            {companyNameText}\n          </h4>\n        ) : (\n          <input\n            type=\"text\"\n            name=\"companyNameText\"\n            value={companyNameText}\n            data-id={experienceId}\n            onChange={handleExperienceInput}\n            className=\"companyNameInput\"\n          />\n        )}\n      </div>\n      <div className=\"experience-line-div\">\n        <label htmlFor=\"jobPositionText\">Position: </label>\n        {experienceShow ? (\n          <h4 display=\"none\" className=\"jobPositionLine\">\n            {jobPositionText}\n          </h4>\n        ) : (\n          <input\n            type=\"text\"\n            name=\"jobPositionText\"\n            value={jobPositionText}\n            data-id={experienceId}\n            onChange={handleExperienceInput}\n            className=\"jobPositionInput\"\n          />\n        )}\n      </div>\n      <div className=\"experience-line-div\">\n        <label htmlFor=\"jobTitleText\">Title: </label>\n        {experienceShow ? (\n          <h4 display=\"none\" className=\"jobTitleLine\">\n            {jobTitleText}\n          </h4>\n        ) : (\n          <input\n            type=\"text\"\n            name=\"jobTitleText\"\n            value={jobTitleText}\n            data-id={experienceId}\n            onChange={handleExperienceInput}\n            className=\"jobTitleInput\"\n          />\n        )}\n      </div>\n      <div className=\"experience-line-div\">\n        <label htmlFor=\"workStartingDateText\">Starting Date: </label>\n        {experienceShow ? (\n          <h4 display=\"none\" className=\"workStartingDateLine\">\n            {workStartingDateText}\n          </h4>\n        ) : (\n          <input\n            type=\"date\"\n            name=\"workStartingDateText\"\n            value={workStartingDateText}\n            data-id={experienceId}\n            onChange={handleExperienceInput}\n            className=\"workStartingDateInput\"\n          />\n        )}\n      </div>\n      <div className=\"experience-line-div\">\n        <label htmlFor=\"workEndingDateText\">Ending Date: </label>\n        {experienceShow ? (\n          <h4 display=\"none\" className=\"workEndingDateLine\">\n            {workEndingDateText}\n          </h4>\n        ) : (\n          <input\n            type=\"date\"\n            name=\"workEndingDateText\"\n            value={workEndingDateText}\n            data-id={experienceId}\n            onChange={handleExperienceInput}\n            className=\"workEndingDateInput\"\n          />\n        )}\n      </div>\n      <button\n        name=\"experienceShow\"\n        data-id={experienceId}\n        onClick={handleExperienceSubmit}\n        className=\"form-button\"\n      >\n        {experienceShow ? \"Edit\" : \"Submit\"}\n      </button>\n      <button\n        data-id={experienceId}\n        onClick={deleteExperience}\n        className=\"form-button\"\n      >\n        Delete\n      </button>\n    </fieldset>\n  );\n}\n\nexport default Experience;\n","import React from \"react\";\nimport \"../styles/Contact.css\";\n\nfunction Contact(props) {\n  const {\n    firstNameText,\n    lastNameText,\n    emailText,\n    phoneText,\n    formSubmit,\n  } = props.data;\n  const handleInput = props.handleInput;\n  return (\n    <fieldset id=\"contact-container\">\n      <legend>Contact Information</legend>\n      <div className=\"contact-line-div\">\n        <label htmlFor=\"firstNameText\">First Name: </label>\n        {formSubmit ? (\n          <h4 className=\"firstNameLine\">{firstNameText}</h4>\n        ) : (\n          <input\n            type=\"text\"\n            name=\"firstNameText\"\n            className=\"firstNameInput\"\n            value={firstNameText}\n            onChange={handleInput}\n          />\n        )}\n      </div>\n      <div className=\"contact-line-div\">\n        <label htmlFor=\"lastNameText\">Last Name: </label>\n        {formSubmit ? (\n          <h4 className=\"lastNameLine\">{lastNameText}</h4>\n        ) : (\n          <input\n            type=\"text\"\n            name=\"lastNameText\"\n            value={lastNameText}\n            className=\"lastNameInput\"\n            onChange={handleInput}\n          />\n        )}\n      </div>\n      <div className=\"contact-line-div\">\n        <label htmlFor=\"emailText\">Email: </label>\n        {formSubmit ? (\n          <h4 className=\"emailLine\">{emailText}</h4>\n        ) : (\n          <input\n            type=\"email\"\n            name=\"emailText\"\n            value={emailText}\n            className=\"emailInput\"\n            onChange={handleInput}\n          />\n        )}\n      </div>\n      <div className=\"contact-line-div\">\n        <label htmlFor=\"phoneText\">Phone Number: </label>\n        {formSubmit ? (\n          <h4 className=\"phoneNumberLine\">{phoneText}</h4>\n        ) : (\n          <input\n            type=\"tel\"\n            name=\"phoneText\"\n            value={phoneText}\n            className=\"phoneNumberInput\"\n            onChange={handleInput}\n          />\n        )}\n      </div>\n    </fieldset>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport \"../styles/Education.css\";\n\nfunction Education(props) {\n  const {\n    schoolNameText,\n    studyTitleText,\n    schoolStartingDateText,\n    schoolEndingDateText,\n    educationShow,\n    educationId,\n  } = props.data;\n  const handleEducationSubmit = props.handleEducationSubmit;\n  const handleEducationInput = props.handleEducationInput;\n  const deleteEducation = props.deleteEducation;\n  return (\n    <fieldset id=\"education-container\">\n      <legend>Education</legend>\n      <div className=\"education-line-div\">\n        <label htmlFor=\"schoolNameText\">School Name: </label>\n        {educationShow ? (\n          <h4 className=\"schoolNameLine\">{schoolNameText}</h4>\n        ) : (\n          <input\n            type=\"text\"\n            name=\"schoolNameText\"\n            value={schoolNameText}\n            onChange={handleEducationInput}\n            data-id={educationId}\n            className=\"schoolNameInput\"\n          />\n        )}\n      </div>\n      <div className=\"education-line-div\">\n        <label htmlFor=\"studyTitleText\">Title: </label>\n        {educationShow ? (\n          <h4 className=\"studyTitleLine\">{studyTitleText}</h4>\n        ) : (\n          <input\n            type=\"text\"\n            name=\"studyTitleText\"\n            value={studyTitleText}\n            onChange={handleEducationInput}\n            data-id={educationId}\n            className=\"studyTitleInput\"\n          />\n        )}\n      </div>\n      <div className=\"education-line-div\">\n        <label htmlFor=\"schoolStartingDateText\">Starting Date: </label>\n        {educationShow ? (\n          <h4 className=\"schoolStartingDateLine\">{schoolStartingDateText}</h4>\n        ) : (\n          <input\n            type=\"date\"\n            name=\"schoolStartingDateText\"\n            value={schoolStartingDateText}\n            onChange={handleEducationInput}\n            data-id={educationId}\n            className=\"schoolStartingDateInput\"\n          />\n        )}\n      </div>\n      <div className=\"education-line-div\">\n        <label htmlFor=\"schoolEndingDateText\">Ending Date: </label>\n        {educationShow ? (\n          <h4 className=\"schoolEndingDateLine\">{schoolEndingDateText}</h4>\n        ) : (\n          <input\n            type=\"date\"\n            name=\"schoolEndingDateText\"\n            value={schoolEndingDateText}\n            onChange={handleEducationInput}\n            data-id={educationId}\n            className=\"schoolEndingDateInput\"\n          />\n        )}\n      </div>\n      <button\n        name=\"educationShow\"\n        data-id={educationId}\n        onClick={handleEducationSubmit}\n        className=\"form-button\"\n      >\n        {educationShow ? \"Edit\" : \"Submit\"}\n      </button>\n      <button\n        data-id={educationId}\n        onClick={deleteEducation}\n        className=\"form-button\"\n      >\n        Delete\n      </button>\n    </fieldset>\n  );\n}\n\nexport default Education;\n","import React from \"react\";\nimport Experience from \"./Experience\";\nimport Contact from \"./Contact\";\nimport Education from \"./Education\";\nimport \"../styles/Form.css\";\n\nfunction Form(props) {\n  const handleInput = props.handleInput;\n  const handleFormSubmit = props.handleFormSubmit;\n  const handleEducationSubmit = props.handleEducationSubmit;\n  const handleEducationInput = props.handleEducationInput;\n  const deleteEducation = props.deleteEducation;\n  const addEducation = props.addEducation;\n  const handleExperienceInput = props.handleExperienceInput;\n  const handleExperienceSubmit = props.handleExperienceSubmit;\n  const addExperience = props.addExperience;\n  const deleteExperience = props.deleteExperience;\n  const formSubmit = props.data.formSubmit;\n  const educations = props.data.educations;\n  const experiences = props.data.experiences;\n  const educationList = educations.map((elem, index) => {\n    return (\n      <Education\n        key={index}\n        data={elem}\n        handleEducationInput={handleEducationInput}\n        handleEducationSubmit={handleEducationSubmit}\n        deleteEducation={deleteEducation}\n      />\n    );\n  });\n  const experienceList = experiences.map((elem, index) => {\n    return (\n      <Experience\n        key={index}\n        data={elem}\n        handleExperienceInput={handleExperienceInput}\n        handleExperienceSubmit={handleExperienceSubmit}\n        deleteExperience={deleteExperience}\n      />\n    );\n  });\n  return (\n    <form id=\"form-div\">\n      <Contact data={props.data} handleInput={handleInput} />\n      {educationList}\n      <button onClick={addEducation}>Add Education</button>\n      {experienceList}\n      <button onClick={addExperience}>Add Experince</button>\n      <br />\n      <button onClick={handleFormSubmit}>\n        {formSubmit ? \"Edit\" : \"Submit\"}\n      </button>\n    </form>\n  );\n}\nexport default Form;\n","import React from \"react\";\nimport \"../styles/Header.css\";\n\nfunction Header(props) {\n  return <header id=\"header\">CV APP</header>;\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form\";\nimport Header from \"./components/Header\";\nimport \"./styles/App.css\";\nimport uniqid from \"uniqid\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: uniqid(),\n      firstNameText: \"\",\n      lastNameText: \"\",\n      emailText: \"\",\n      phoneText: \"\",\n      formSubmit: false,\n      educations: [\n        {\n          schoolNameText: \"\",\n          studyTitleText: \"\",\n          schoolStartingDateText: \"\",\n          schoolEndingDateText: \"\",\n          educationId: uniqid(),\n          educationShow: false,\n        },\n      ],\n      experiences: [\n        {\n          companyNameText: \"\",\n          jobPositionText: \"\",\n          jobTitleText: \"\",\n          workStartingDateText: \"\",\n          workEndingDateText: \"\",\n          experienceId: uniqid(),\n          experienceShow: false,\n        },\n      ],\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleEducationSubmit = this.handleEducationSubmit.bind(this);\n    this.handleEducationInput = this.handleEducationInput.bind(this);\n    this.addEducation = this.addEducation.bind(this);\n    this.deleteEducation = this.deleteEducation.bind(this);\n    this.handleExperienceInput = this.handleExperienceInput.bind(this);\n    this.handleExperienceSubmit = this.handleExperienceSubmit.bind(this);\n    this.addExperience = this.addExperience.bind(this);\n    this.deleteExperience = this.deleteExperience.bind(this);\n  }\n  handleInput(event) {\n    event.preventDefault();\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleExperienceInput(event) {\n    event.preventDefault();\n    const { name, value, dataset } = event.target;\n    const newExperinces = this.state.experiences.map((elem) => {\n      if (elem.experienceId === dataset.id) {\n        elem[name] = value;\n      }\n      return elem;\n    });\n    this.setState({\n      experiences: newExperinces,\n    });\n  }\n  handleExperienceSubmit(event) {\n    event.preventDefault();\n    const { name, dataset } = event.target;\n    const newExperiences = this.state.experiences.map((elem, index) => {\n      if (elem.experienceId === dataset.id) {\n        elem[name] = !this.state.experiences[index].experienceShow;\n      }\n      return elem;\n    });\n    this.setState({\n      experiences: newExperiences,\n    });\n  }\n  addExperience(event) {\n    event.preventDefault();\n    this.setState({\n      experiences: [\n        ...this.state.experiences,\n        {\n          companyNameText: \"\",\n          jobPositionText: \"\",\n          jobTitleText: \"\",\n          workStartingDateText: \"\",\n          workEndingDateText: \"\",\n          experienceId: uniqid(),\n          experienceShow: false,\n        },\n      ],\n    });\n  }\n  deleteExperience(event) {\n    event.preventDefault();\n    const { dataset } = event.target;\n    const newExperinces = this.state.experiences.filter((elem) => {\n      return elem.experienceId !== dataset.id;\n    });\n    this.setState({\n      experiences: newExperinces,\n    });\n  }\n  addEducation(event) {\n    event.preventDefault();\n    this.setState({\n      educations: [\n        ...this.state.educations,\n        {\n          schoolNameText: \"\",\n          studyTitleText: \"\",\n          schoolStartingDateText: \"\",\n          schoolEndingDateText: \"\",\n          educationId: uniqid(),\n          educationShow: false,\n        },\n      ],\n    });\n  }\n  handleEducationInput(event) {\n    event.preventDefault();\n    const { name, value, dataset } = event.target;\n    const newEducations = this.state.educations.map((elem) => {\n      if (elem.educationId === dataset.id) {\n        elem[name] = value;\n      }\n      return elem;\n    });\n    this.setState({\n      educations: newEducations,\n    });\n  }\n  handleEducationSubmit(event) {\n    event.preventDefault();\n    const { name, dataset } = event.target;\n    const newEducations = this.state.educations.map((elem, index) => {\n      if (elem.educationId === dataset.id) {\n        elem[name] = !this.state.educations[index].educationShow;\n      }\n      return elem;\n    });\n    this.setState({\n      educations: newEducations,\n    });\n  }\n  deleteEducation(event) {\n    event.preventDefault();\n    const { dataset } = event.target;\n    const newEducations = this.state.educations.filter((elem) => {\n      return elem.educationId !== dataset.id;\n    });\n    this.setState({\n      educations: newEducations,\n    });\n  }\n  handleFormSubmit(event) {\n    event.preventDefault();\n    const newEducations = this.state.educations.map((elem) => {\n      if (this.state.formSubmit === false) {\n        elem.educationShow = true;\n      } else if (this.state.formSubmit === true) {\n        elem.educationShow = false;\n      }\n      return elem;\n    });\n    const newExperiences = this.state.experiences.map((elem) => {\n      if (this.state.formSubmit === false) {\n        elem.experienceShow = true;\n      } else if (this.state.formSubmit === true) {\n        elem.experienceShow = false;\n      }\n      return elem;\n    });\n    this.setState({\n      formSubmit: !this.state.formSubmit,\n      educations: newEducations,\n      experiences: newExperiences,\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Form\n          data={this.state}\n          handleInput={this.handleInput}\n          handleFormSubmit={this.handleFormSubmit}\n          handleEducationSubmit={this.handleEducationSubmit}\n          handleEducationInput={this.handleEducationInput}\n          addEducation={this.addEducation}\n          deleteEducation={this.deleteEducation}\n          handleExperienceInput={this.handleExperienceInput}\n          handleExperienceSubmit={this.handleExperienceSubmit}\n          addExperience={this.addExperience}\n          deleteExperience={this.deleteExperience}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}